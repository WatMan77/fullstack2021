{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\fullstack2021\\\\part8OG\\\\library-frontend\\\\src\\\\App.js\";\nimport { useApolloClient, useSubscription } from '@apollo/client';\nimport React, { useState, useEffect } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport LoginForm from './components/LoginForm';\nimport NewBook from './components/NewBook';\nimport Recommend from './components/Recommend';\nimport { ALL_BOOKS, BOOK_ADDED } from './query';\n\nconst App = () => {\n  const [page, setPage] = useState('authors');\n  const [token, setUserToken] = useState(null);\n  const client = useApolloClient();\n\n  const updateCacheWith = addedBook => {\n    const includeIn = (set, object) => set.map(p => p.id).includes(object.id);\n\n    const dataInStore = client.readQuery({\n      query: ALL_BOOKS\n    });\n\n    if (!includeIn(dataInStore.allBooks, addedBook)) {\n      client.writeQuery({\n        query: ALL_BOOKS,\n        data: {\n          allBooks: dataInStore.allBooks.concat(addedBook)\n        }\n      });\n    }\n  };\n\n  useSubscription(BOOK_ADDED, {\n    onSubscriptionData: ({\n      subscriptionData\n    }) => {\n      console.log(subscriptionData);\n      const book = subscriptionData.data.bookAdded;\n      window.alert(`Added book: ${book.title} by ${book.author.name}`);\n      updateCacheWith(book);\n    }\n  });\n  useEffect(() => {\n    setUserToken(localStorage.getItem('book-user-token'));\n  }, []);\n\n  const logout = () => {\n    setUserToken(null);\n    localStorage.clear();\n    client.resetStore();\n  };\n\n  const loggedIn = token ? React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"add book\"), React.createElement(\"button\", {\n    onClick: () => setPage('recommend'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"recommend\"), React.createElement(\"button\", {\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"logout\")) : null;\n  const loggedOut = token ? null : React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    onClick: () => setPage('login'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"login\"));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"books\"), loggedIn, loggedOut), React.createElement(Authors, {\n    show: page === 'authors',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Books, {\n    show: page === 'books',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(NewBook, {\n    show: page === 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(LoginForm, {\n    show: page === 'login',\n    setToken: setUserToken,\n    setPage: setPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(Recommend, {\n    show: page === 'recommend',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Daniel/fullstack2021/part8OG/library-frontend/src/App.js"],"names":["useApolloClient","useSubscription","React","useState","useEffect","Authors","Books","LoginForm","NewBook","Recommend","ALL_BOOKS","BOOK_ADDED","App","page","setPage","token","setUserToken","client","updateCacheWith","addedBook","includeIn","set","object","map","p","id","includes","dataInStore","readQuery","query","allBooks","writeQuery","data","concat","onSubscriptionData","subscriptionData","console","log","book","bookAdded","window","alert","title","author","name","localStorage","getItem","logout","clear","resetStore","loggedIn","loggedOut"],"mappings":"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","sourcesContent":["\r\nimport { useApolloClient, useSubscription } from '@apollo/client'\r\nimport React, { useState, useEffect } from 'react'\r\nimport Authors from './components/Authors'\r\nimport Books from './components/Books'\r\nimport LoginForm from './components/LoginForm'\r\nimport NewBook from './components/NewBook'\r\nimport Recommend from './components/Recommend'\r\nimport { ALL_BOOKS, BOOK_ADDED } from './query'\r\n\r\nconst App = () => {\r\n  const [page, setPage] = useState('authors')\r\n  const [token, setUserToken] = useState(null)\r\n  const client = useApolloClient()\r\n\r\n  const updateCacheWith = (addedBook) => {\r\n    const includeIn = (set, object) =>\r\n    set.map(p => p.id).includes(object.id)\r\n\r\n    const dataInStore = client.readQuery({ query: ALL_BOOKS })\r\n    if(!includeIn(dataInStore.allBooks, addedBook)) {\r\n      client.writeQuery({\r\n        query: ALL_BOOKS,\r\n        data: { allBooks : dataInStore.allBooks.concat(addedBook)}\r\n      })\r\n    }\r\n  }\r\n\r\n  useSubscription(BOOK_ADDED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      console.log(subscriptionData)\r\n      const book = subscriptionData.data.bookAdded\r\n      window.alert(\r\n        `Added book: ${book.title} by ${book.author.name}`\r\n      )\r\n      updateCacheWith(book)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    setUserToken(localStorage.getItem('book-user-token'))\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    setUserToken(null)\r\n    localStorage.clear()\r\n    client.resetStore()\r\n  }\r\n\r\n  const loggedIn = token\r\n  ? \r\n  <>\r\n    <button onClick={() => setPage('add')} >add book</button>\r\n    <button onClick={() => setPage('recommend')}>recommend</button>\r\n    <button onClick={logout}>logout</button>\r\n  </>\r\n  : null\r\n\r\n  const loggedOut = token\r\n  ? null\r\n  :\r\n  <>\r\n   <button onClick={() => setPage('login')} >login</button>\r\n  </>\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setPage('authors')}>authors</button>\r\n        <button onClick={() => setPage('books')}>books</button>\r\n        {loggedIn}\r\n        {loggedOut}\r\n      </div>\r\n\r\n      <Authors\r\n        show={page === 'authors'}\r\n      />\r\n\r\n      <Books\r\n        show={page === 'books'}\r\n      />\r\n\r\n      <NewBook\r\n        show={page === 'add'}\r\n      />\r\n\r\n      <LoginForm\r\n        show={page === 'login'}\r\n        setToken={setUserToken}\r\n        setPage={setPage}\r\n      />\r\n\r\n      <Recommend \r\n        show={page === 'recommend'}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}