{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\fullstack2021\\\\part8OG\\\\library-frontend\\\\src\\\\components\\\\Recommend.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport { ALL_BOOKS, BOOKS_OF_GENRE, ME } from '../query';\n\nconst Recommend = props => {\n  const [genreBooks, result] = useLazyQuery(BOOKS_OF_GENRE);\n  const [books, setBooks] = useState([]);\n  const user = useQuery(ME);\n  useEffect(() => {\n    if (user.data) {\n      console.log(result.data);\n      genreBooks({\n        variables: {\n          genre: user.data.me.favoriteGenre\n        }\n      });\n    }\n  }, [genreBooks, user]);\n  useEffect(() => {\n    if (result.data && result.data.allBooks) {\n      console.log('Give result:', result);\n      setBooks(result.data.allBooks);\n    }\n  }, [result.data, books]);\n  console.log('What are books?', books);\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (books.loading || user.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const favGenre = user.data.me.favoriteGenre;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Recommendations\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"books in your favorite genre \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, favGenre)), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"published\")), books.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, a.published))))));\n};\n\nexport default Recommend;","map":{"version":3,"sources":["C:/Users/Daniel/fullstack2021/part8OG/library-frontend/src/components/Recommend.js"],"names":["React","useEffect","useState","useLazyQuery","useQuery","ALL_BOOKS","BOOKS_OF_GENRE","ME","Recommend","props","genreBooks","result","books","setBooks","user","data","console","log","variables","genre","me","favoriteGenre","allBooks","show","loading","favGenre","map","a","title","author","name","published"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,gBAAvC;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,EAApC,QAA8C,UAA9C;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAE3B,QAAM,CAACC,UAAD,EAAaC,MAAb,IAAuBR,YAAY,CAACG,cAAD,CAAzC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,IAAI,GAAGV,QAAQ,CAACG,EAAD,CAArB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGa,IAAI,CAACC,IAAR,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,IAAnB;AACAL,MAAAA,UAAU,CAAC;AAAEQ,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAEL,IAAI,CAACC,IAAL,CAAUK,EAAV,CAAaC;AAArB;AAAb,OAAD,CAAV;AACD;AACF,GALQ,EAKN,CAACX,UAAD,EAAaI,IAAb,CALM,CAAT;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGU,MAAM,CAACI,IAAP,IAAeJ,MAAM,CAACI,IAAP,CAAYO,QAA9B,EAAuC;AACrCN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,MAA5B;AACAE,MAAAA,QAAQ,CAACF,MAAM,CAACI,IAAP,CAAYO,QAAb,CAAR;AACD;AACF,GALQ,EAKN,CAACX,MAAM,CAACI,IAAR,EAAcH,KAAd,CALM,CAAT;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,KAA/B;;AAEA,MAAG,CAACH,KAAK,CAACc,IAAV,EAAe;AACb,WAAO,IAAP;AACD;;AAED,MAAGX,KAAK,CAACY,OAAN,IAAiBV,IAAI,CAACU,OAAzB,EAAiC;AAC/B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;;AAED,QAAMC,QAAQ,GAAGX,IAAI,CAACC,IAAL,CAAUK,EAAV,CAAaC,aAA9B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,QAAJ,CAAhC,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGb,KAAK,CAACc,GAAN,CAAUC,CAAC,IACV;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,SAAP,CAHF,CADD,CAVH,CADF,CAJF,CADF;AA4BD,CA/DD;;AAiEA,eAAevB,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useLazyQuery, useQuery } from '@apollo/client'\r\nimport { ALL_BOOKS, BOOKS_OF_GENRE, ME } from '../query'\r\n\r\nconst Recommend = (props) => {\r\n\r\n  const [genreBooks, result] = useLazyQuery(BOOKS_OF_GENRE)\r\n  const [books, setBooks] = useState([])\r\n  const user = useQuery(ME)\r\n\r\n  useEffect(() => {\r\n    if(user.data) {\r\n      console.log(result.data)\r\n      genreBooks({ variables: {genre: user.data.me.favoriteGenre}})\r\n    }\r\n  }, [genreBooks, user])\r\n\r\n  useEffect(() => {\r\n    if(result.data && result.data.allBooks){\r\n      console.log('Give result:', result)\r\n      setBooks(result.data.allBooks)\r\n    }\r\n  }, [result.data, books])\r\n\r\n  console.log('What are books?', books)\r\n\r\n  if(!props.show){\r\n    return null\r\n  }\r\n\r\n  if(books.loading || user.loading){\r\n    return (\r\n      <div>\r\n        loading...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const favGenre = user.data.me.favoriteGenre\r\n  return (\r\n    <div>\r\n      <h2>Recommendations</h2>\r\n\r\n      <p>books in your favorite genre <b>{favGenre}</b></p>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {books.map(a =>\r\n            <tr key={a.title}>\r\n              <td>{a.title}</td>\r\n              <td>{a.author.name}</td>\r\n              <td>{a.published}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recommend"]},"metadata":{},"sourceType":"module"}