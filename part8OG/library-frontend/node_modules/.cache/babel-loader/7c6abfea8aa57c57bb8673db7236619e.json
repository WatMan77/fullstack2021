{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\fullstack2021\\\\part8OG\\\\library-frontend\\\\src\\\\components\\\\Books.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ALL_BOOKS } from '../query';\n\nconst Books = props => {\n  const books = useQuery(ALL_BOOKS);\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (books.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  console.log('what is books?', books.data.allBooks);\n  let genres = new Set([books.data.allBooks.map(x => x.genres)]);\n  console.log('genres first', genres);\n  genres = [...genres].flat();\n  console.log('genres now');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"published\")), books.data.allBooks.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, a.published))), genres.map(x => React.createElement(\"button\", {\n    key: x,\n    onClick: () => console.log(x),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, x)))));\n};\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/Daniel/fullstack2021/part8OG/library-frontend/src/components/Books.js"],"names":["React","useQuery","ALL_BOOKS","Books","props","books","show","loading","console","log","data","allBooks","genres","Set","map","x","flat","a","title","author","name","published"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEvB,QAAMC,KAAK,GAAGJ,QAAQ,CAACC,SAAD,CAAtB;;AAEA,MAAI,CAACE,KAAK,CAACE,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAGD,KAAK,CAACE,OAAT,EAAiB;AACf,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,KAAK,CAACK,IAAN,CAAWC,QAAzC;AACA,MAAIC,MAAM,GAAG,IAAIC,GAAJ,CAAQ,CAACR,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBG,GAApB,CAAwBC,CAAC,IAAIA,CAAC,CAACH,MAA/B,CAAD,CAAR,CAAb;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,MAA5B;AACAA,EAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,EAAYI,IAAZ,EAAT;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGJ,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBG,GAApB,CAAwBG,CAAC,IACxB;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,SAAP,CAHF,CADD,CAVH,EAiBGT,MAAM,CAACE,GAAP,CAAWC,CAAC,IACb;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,OAAO,EAAE,MAAMP,OAAO,CAACC,GAAR,CAAYM,CAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDA,CAAhD,CADC,CAjBH,CADF,CAHF,CADF;AA6BD,CAhDD;;AAkDA,eAAeZ,KAAf","sourcesContent":["import React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { ALL_BOOKS } from '../query'\r\n\r\nconst Books = (props) => {\r\n\r\n  const books = useQuery(ALL_BOOKS)\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  if(books.loading){\r\n    return (\r\n      <div>loading...</div>\r\n    )\r\n  }\r\n  console.log('what is books?', books.data.allBooks)\r\n  let genres = new Set([books.data.allBooks.map(x => x.genres)])\r\n  console.log('genres first', genres)\r\n  genres = [...genres].flat()\r\n  console.log('genres now')\r\n\r\n  return (\r\n    <div>\r\n      <h2>books</h2>\r\n\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {books.data.allBooks.map(a =>\r\n            <tr key={a.title}>\r\n              <td>{a.title}</td>\r\n              <td>{a.author.name}</td>\r\n              <td>{a.published}</td>\r\n            </tr>\r\n          )}\r\n          {genres.map(x =>\r\n          <button key={x} onClick={() => console.log(x)}>{x}</button>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Books"]},"metadata":{},"sourceType":"module"}