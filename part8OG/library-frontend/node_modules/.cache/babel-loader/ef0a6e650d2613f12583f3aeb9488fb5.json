{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\fullstack2021\\\\part8OG\\\\library-frontend\\\\src\\\\components\\\\NewBook.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_BOOK, ALL_AUTHORS, ALL_BOOKS } from '../query';\n\nconst NewBook = props => {\n  const [title, setTitle] = useState('');\n  const [author, setAuhtor] = useState('');\n  const [published, setPublished] = useState('');\n  const [genre, setGenre] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [createBook] = useMutation(ADD_BOOK, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }, {\n      query: ALL_BOOKS\n    }]\n  });\n\n  if (!props.show) {\n    return null;\n  }\n\n  const submit = async event => {\n    event.preventDefault();\n    console.log('add book...');\n    const response = await createBook({\n      variables: {\n        title,\n        author,\n        published,\n        genres\n      }\n    });\n    console.log(response.body);\n    setTitle('');\n    setPublished('');\n    setAuhtor('');\n    setGenres([]);\n    setGenre('');\n    console.log('book added?');\n  };\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre));\n    setGenre('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"title\", React.createElement(\"input\", {\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"author\", React.createElement(\"input\", {\n    value: author,\n    onChange: ({\n      target\n    }) => setAuhtor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"published\", React.createElement(\"input\", {\n    type: \"number\",\n    value: published,\n    onChange: ({\n      target\n    }) => setPublished(Number(target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: genre,\n    onChange: ({\n      target\n    }) => setGenre(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: addGenre,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"add genre\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"genres: \", genres.join(' ')), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"create book\")));\n};\n\nexport default NewBook;","map":{"version":3,"sources":["C:/Users/Daniel/fullstack2021/part8OG/library-frontend/src/components/NewBook.js"],"names":["React","useState","useMutation","ADD_BOOK","ALL_AUTHORS","ALL_BOOKS","NewBook","props","title","setTitle","author","setAuhtor","published","setPublished","genre","setGenre","genres","setGenres","createBook","refetchQueries","query","show","submit","event","preventDefault","console","log","response","variables","body","addGenre","concat","target","value","Number","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,UAAjD;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAAEiB,UAAF,IAAiBhB,WAAW,CAACC,QAAD,EAAW;AAC3CgB,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEhB;AAAT,KAAD,EAAyB;AAAEgB,MAAAA,KAAK,EAAEf;AAAT,KAAzB;AAD2B,GAAX,CAAlC;;AAKA,MAAI,CAACE,KAAK,CAACc,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,QAAMC,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,UAAMC,QAAQ,GAAG,MAAMT,UAAU,CAAC;AAAEU,MAAAA,SAAS,EAAE;AAAEpB,QAAAA,KAAF;AAASE,QAAAA,MAAT;AAAiBE,QAAAA,SAAjB;AAA4BI,QAAAA;AAA5B;AAAb,KAAD,CAAjC;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACE,IAArB;AAEApB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAdD;;AAgBA,QAAMI,QAAQ,GAAG,MAAM;AACrBb,IAAAA,SAAS,CAACD,MAAM,CAACe,MAAP,CAAcjB,KAAd,CAAD,CAAT;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE;AACE,IAAA,KAAK,EAAEd,KADT;AAEE,IAAA,QAAQ,EAAE,CAAC;AAAEwB,MAAAA;AAAF,KAAD,KAAgBvB,QAAQ,CAACuB,MAAM,CAACC,KAAR,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AACE,IAAA,KAAK,EAAEvB,MADT;AAEE,IAAA,QAAQ,EAAE,CAAC;AAAEsB,MAAAA;AAAF,KAAD,KAAgBrB,SAAS,CAACqB,MAAM,CAACC,KAAR,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAErB,SAFT;AAGE,IAAA,QAAQ,EAAE,CAAC;AAAEoB,MAAAA;AAAF,KAAD,KAAgBnB,YAAY,CAACqB,MAAM,CAACF,MAAM,CAACC,KAAR,CAAP,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAEnB,KADT;AAEE,IAAA,QAAQ,EAAE,CAAC;AAAEkB,MAAAA;AAAF,KAAD,KAAgBjB,QAAQ,CAACiB,MAAM,CAACC,KAAR,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAQ,IAAA,OAAO,EAAEH,QAAjB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CAvBF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWd,MAAM,CAACmB,IAAP,CAAY,GAAZ,CADX,CA9BF,EAiCE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjCF,CADF,CADF;AAuCD,CA5ED;;AA8EA,eAAe7B,OAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport { ADD_BOOK, ALL_AUTHORS, ALL_BOOKS } from '../query'\r\n\r\nconst NewBook = (props) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuhtor] = useState('')\r\n  const [published, setPublished] = useState('')\r\n  const [genre, setGenre] = useState('')\r\n  const [genres, setGenres] = useState([])\r\n\r\n  const [ createBook ] = useMutation(ADD_BOOK, {\r\n    refetchQueries: [{ query: ALL_AUTHORS }, { query: ALL_BOOKS }]\r\n\r\n  })\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    console.log('add book...')\r\n\r\n    const response = await createBook({ variables: { title, author, published, genres }})\r\n    console.log(response.body)\r\n\r\n    setTitle('')\r\n    setPublished('')\r\n    setAuhtor('')\r\n    setGenres([])\r\n    setGenre('')\r\n    console.log('book added?')\r\n  }\r\n\r\n  const addGenre = () => {\r\n    setGenres(genres.concat(genre))\r\n    setGenre('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submit}>\r\n        <div>\r\n          title\r\n          <input\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            value={author}\r\n            onChange={({ target }) => setAuhtor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          published\r\n          <input\r\n            type='number'\r\n            value={published}\r\n            onChange={({ target }) => setPublished(Number(target.value))}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            value={genre}\r\n            onChange={({ target }) => setGenre(target.value)}\r\n          />\r\n          <button onClick={addGenre} type=\"button\">add genre</button>\r\n        </div>\r\n        <div>\r\n          genres: {genres.join(' ')}\r\n        </div>\r\n        <button type='submit'>create book</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewBook"]},"metadata":{},"sourceType":"module"}