{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\fullstack2021\\\\part8OG\\\\library-frontend\\\\src\\\\components\\\\Books.js\";\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { ALL_BOOKS } from '../query';\n\nconst Books = props => {\n  const books = useQuery(ALL_BOOKS);\n  const [booksToShow, setBooks] = useState([]);\n\n  if (!props.show) {\n    return null;\n  }\n\n  if (books.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  setBooks(books.data.allBooks);\n\n  const filterBooks = genre => {\n    setBooks(booksToShow.filter(x => x === genre));\n  };\n\n  let genres = new Set(books.data.allBooks.map(x => x.genres).flat());\n  genres = [...genres];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"published\")), books.data.allBooks.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, a.published))))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, genres.map(x => React.createElement(\"button\", {\n    key: x,\n    onClick: () => filterBooks(x),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, x))));\n};\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/Daniel/fullstack2021/part8OG/library-frontend/src/components/Books.js"],"names":["React","useState","useQuery","ALL_BOOKS","Books","props","books","booksToShow","setBooks","show","loading","data","allBooks","filterBooks","genre","filter","x","genres","Set","map","flat","a","title","author","name","published"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEvB,QAAMC,KAAK,GAAGJ,QAAQ,CAACC,SAAD,CAAtB;AACA,QAAM,CAACI,WAAD,EAAcC,QAAd,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,MAAI,CAACI,KAAK,CAACI,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAGH,KAAK,CAACI,OAAT,EAAiB;AACf,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;;AAEDF,EAAAA,QAAQ,CAACF,KAAK,CAACK,IAAN,CAAWC,QAAZ,CAAR;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,QAAQ,CAACD,WAAW,CAACQ,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,KAAKF,KAA9B,CAAD,CAAR;AACD,GAFD;;AAIA,MAAIG,MAAM,GAAG,IAAIC,GAAJ,CAAQZ,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBO,GAApB,CAAwBH,CAAC,IAAIA,CAAC,CAACC,MAA/B,EAAuCG,IAAvC,EAAR,CAAb;AACAH,EAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,CAAT;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGX,KAAK,CAACK,IAAN,CAAWC,QAAX,CAAoBO,GAApB,CAAwBE,CAAC,IACxB;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,SAAP,CAHF,CADD,CAVH,CADF,CAHF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACE,GAAP,CAAWH,CAAC,IACX;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,OAAO,EAAE,MAAMH,WAAW,CAACG,CAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDA,CAAhD,CADD,CADH,CAvBF,CADF;AA+BD,CAvDD;;AAyDA,eAAeZ,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport { ALL_BOOKS } from '../query'\r\n\r\nconst Books = (props) => {\r\n\r\n  const books = useQuery(ALL_BOOKS)\r\n  const [booksToShow, setBooks] = useState([])\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  if(books.loading){\r\n    return (\r\n      <div>loading...</div>\r\n    )\r\n  }\r\n\r\n  setBooks(books.data.allBooks)\r\n\r\n  const filterBooks = (genre) => {\r\n    setBooks(booksToShow.filter(x => x === genre))\r\n  }\r\n\r\n  let genres = new Set(books.data.allBooks.map(x => x.genres).flat())\r\n  genres = [...genres]\r\n\r\n  return (\r\n    <div>\r\n      <h2>books</h2>\r\n\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {books.data.allBooks.map(a =>\r\n            <tr key={a.title}>\r\n              <td>{a.title}</td>\r\n              <td>{a.author.name}</td>\r\n              <td>{a.published}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {genres.map(x =>\r\n          <button key={x} onClick={() => filterBooks(x)}>{x}</button>\r\n            )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Books"]},"metadata":{},"sourceType":"module"}