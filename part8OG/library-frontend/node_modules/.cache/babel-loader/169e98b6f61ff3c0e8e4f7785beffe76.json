{"ast":null,"code":"import { gql } from '@apollo/client';\nconst BOOK_DETAILS = gql`\n  fragment BookDetails on Book {\n    title\n    published\n    author {\n      name\n    }\n    genres\n  }\n`;\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      bookCount\n    }\n  }\n`; // NOTE! Authors does not work yet and causes a crash\n\nexport const ALL_BOOKS = gql`\n\n  {\n    allBooks {\n      ...BookDetails\n    }\n  }\n  ${BOOK_DETAILS}\n`;\nexport const ADD_BOOK = gql`\n  mutation createBook($title: String!, $published: Int!, $genres: [String!], $author: String!, $born: Int) {\n    addBook(\n      title: $title\n      published: $published\n      genres: $genres\n      author: $author\n      born: $born\n    ) {\n      title\n      published\n    }\n  }\n`;\nexport const EDIT_BIRTH = gql`\n  mutation editBirth($name: String!, $setBornTo: Int!) {\n    editAuthor(\n      name: $name\n      setBornTo: $setBornTo\n    ) {\n      name\n      born\n    }\n  }\n`;\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;\nexport const ME = gql`\n  query {\n    me {\n    username\n    favoriteGenre\n    }\n  }\n`;\nexport const BOOK_ADDED = gql`\n  subscription {\n    bookAdded {\n      ...BookDetails\n    }\n  }\n  ${BOOK_DETAILS}\n`;","map":{"version":3,"sources":["C:/Users/Daniel/fullstack2021/part8OG/library-frontend/src/query.js"],"names":["gql","BOOK_DETAILS","ALL_AUTHORS","ALL_BOOKS","ADD_BOOK","EDIT_BIRTH","LOGIN","ME","BOOK_ADDED"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,MAAMC,YAAY,GAAGD,GAAI;;;;;;;;;CAAzB;AAWA,OAAO,MAAME,WAAW,GAAGF,GAAI;;;;;;;;CAAxB,C,CASP;;AACA,OAAO,MAAMG,SAAS,GAAGH,GAAI;;;;;;;IAOzBC,YAAa;CAPV;AASP,OAAO,MAAMG,QAAQ,GAAGJ,GAAI;;;;;;;;;;;;;CAArB;AAeP,OAAO,MAAMK,UAAU,GAAGL,GAAI;;;;;;;;;;CAAvB;AAWP,OAAO,MAAMM,KAAK,GAAGN,GAAI;;;;;;CAAlB;AAQP,OAAO,MAAMO,EAAE,GAAGP,GAAI;;;;;;;CAAf;AASP,OAAO,MAAMQ,UAAU,GAAGR,GAAI;;;;;;IAM1BC,YAAa;CANV","sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nconst BOOK_DETAILS = gql`\r\n  fragment BookDetails on Book {\r\n    title\r\n    published\r\n    author {\r\n      name\r\n    }\r\n    genres\r\n  }\r\n`\r\n\r\nexport const ALL_AUTHORS = gql`\r\n  query {\r\n    allAuthors {\r\n      name\r\n      born\r\n      bookCount\r\n    }\r\n  }\r\n`\r\n// NOTE! Authors does not work yet and causes a crash\r\nexport const ALL_BOOKS = gql`\r\n\r\n  {\r\n    allBooks {\r\n      ...BookDetails\r\n    }\r\n  }\r\n  ${BOOK_DETAILS}\r\n` \r\nexport const ADD_BOOK = gql`\r\n  mutation createBook($title: String!, $published: Int!, $genres: [String!], $author: String!, $born: Int) {\r\n    addBook(\r\n      title: $title\r\n      published: $published\r\n      genres: $genres\r\n      author: $author\r\n      born: $born\r\n    ) {\r\n      title\r\n      published\r\n    }\r\n  }\r\n`\r\n\r\nexport const EDIT_BIRTH = gql`\r\n  mutation editBirth($name: String!, $setBornTo: Int!) {\r\n    editAuthor(\r\n      name: $name\r\n      setBornTo: $setBornTo\r\n    ) {\r\n      name\r\n      born\r\n    }\r\n  }\r\n`\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nexport const ME = gql`\r\n  query {\r\n    me {\r\n    username\r\n    favoriteGenre\r\n    }\r\n  }\r\n`\r\n\r\nexport const BOOK_ADDED = gql`\r\n  subscription {\r\n    bookAdded {\r\n      ...BookDetails\r\n    }\r\n  }\r\n  ${BOOK_DETAILS}\r\n`"]},"metadata":{},"sourceType":"module"}